name: Deploy to GitHub Pages

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, dom, fileinfo, mysql, zip

      - name: Install Composer dependencies
        run: |
          composer install --prefer-dist --no-dev --no-progress --optimize-autoloader

      - name: Prepare environment
        run: |
          # Create a clean .env file using printf to avoid heredoc/quotes issues
          printf 'DB_HOST=127.0.0.1\nDB_PORT=3306\nDB_NAME=booktrack\nDB_USERNAME=root\nDB_PASSWORD=\nDB_CHARSET=utf8mb4\nYII_DEBUG=false\nYII_ENV=prod\n' > .env
          # Append generated cookie validation key
          echo "COOKIE_VALIDATION_KEY=$(openssl rand -base64 32)" >> .env
          mkdir -p web/uploads/books

      - name: Generate .htaccess for GitHub Pages
        run: |
          echo "RewriteEngine On
          RewriteCond %{REQUEST_FILENAME} !-f
          RewriteCond %{REQUEST_FILENAME} !-d
          RewriteRule ^(.*)$ index.php [L]" > web/.htaccess

      - name: Prepare deployment directory
        run: |
          mkdir -p _site
          cp -r vendor _site/
          cp -r web _site/
          cp -r config _site/
          cp -r models _site/
          cp -r controllers _site/
          cp -r views _site/
          cp -r services _site/
          cp -r migrations _site/
          cp .env _site/
          cp yii _site/
          cp index.php _site/

          # Cleanup unnecessary files
          find _site/vendor -type d \( -name "tests" -o -name "docs" -o -name "examples" \) -exec rm -rf {} +
          find _site/vendor -type f \( -name "*.md" -o -name "LICENSE" -o -name "CHANGELOG" \) -delete

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './_site'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
